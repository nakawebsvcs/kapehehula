---
import 'bootstrap-icons/font/bootstrap-icons.css';
import headerLogo from "../assets/images/header-logo.png";
import headerLogoMobile from "../assets/images/header-logo-mobile.png";
import Login from "./Login.astro";

// Check if user is logged in by looking for the Firebase token cookie
const isLoggedIn = Astro.cookies.has("firebase-token");
console.log("Authentication status:", isLoggedIn);
---

<script>
  import '../js/login.js';
  import { onAuthStateChanged } from 'firebase/auth';
  import { auth } from '../lib/firebase.js';
  
  // Function to check if user is logged in via cookie
  function isUserLoggedIn() {
    return document.cookie.includes('firebase-token');
  }
  
  function updateAuthUI(isAuthenticated) {
    const authLink = document.getElementById('auth-link');
    if (authLink) {
      authLink.textContent = isAuthenticated ? 'Sign Out' : 'Member Login';
      authLink.setAttribute('data-logged-in', isAuthenticated.toString());
    }
    
    const loginComponent = document.querySelector('.login-component');
    if (loginComponent) {
      loginComponent.style.display = isAuthenticated ? 'none' : 'block';
    }
  }

  // Handle Members Area link clicks
  function handleMembersAreaClick(event) {
    if (!isUserLoggedIn()) {
      event.preventDefault();
      event.stopPropagation();
      alert('Please log in to access the Members Area');
      return false;
    }
  }
  
  onAuthStateChanged(auth, (user) => {
    console.log('Auth state changed:', !!user);
    updateAuthUI(!!user);
    
    if (!user) {
      const protectedPages = ['/members-page', '/hula-library'];
      if (protectedPages.includes(window.location.pathname)) {
        console.log('User signed out, redirecting from protected page');
        window.location.href = '/';
      }
    }
  });
  
  // Setup event listeners
  function setupMembersAreaHandler() {
    const membersLinks = [
      document.querySelector('a[href="/members-page"]'),
      document.getElementById('members-area-link')
    ].filter(Boolean);
    
    membersLinks.forEach(link => {
      link.removeEventListener('click', handleMembersAreaClick);
      link.addEventListener('click', handleMembersAreaClick);
    });
  }
  
  document.addEventListener('DOMContentLoaded', setupMembersAreaHandler);
  document.addEventListener('astro:page-load', setupMembersAreaHandler);
  setTimeout(setupMembersAreaHandler, 100);
</script>



<!-- ============================================ -->
<!--                  Header Wrapper              -->
<!-- ============================================ -->
<div id="header-wrapper">

<!-- ============================================ -->
<!--                     Quote                    -->
<!-- ============================================ -->

<section id="quote-2141">
    <div class="cs-container">
      <div class="cs-content">
    <img class="cs-quote-icon cs-quote-icon-desktop" loading="lazy" decoding="async" src={headerLogo.src} alt="quote" width="100%" height="100%" aria-hidden="true">
    <img class="cs-quote-icon cs-quote-icon-mobile" loading="lazy" decoding="async" src={headerLogoMobile.src} alt="quote" width="100%" height="100%" aria-hidden="true">
    </div>
    </div>
</section>

<!-- ============================================ -->
<!--                 Navigation                   -->
<!-- ============================================ -->
<header id="cs-navigation">
    <!--Navigation List-->
    <nav class="cs-nav">
        <!--Mobile Nav Toggle-->
        <button class="cs-toggle" id="mobile-menu-toggle" aria-expanded="false" aria-controls="cs-expanded" aria-label="mobile menu toggle">
            <div class="cs-box" aria-hidden="true">
                <span class="cs-line cs-line1" aria-hidden="true"></span>
                <span class="cs-line cs-line2" aria-hidden="true"></span>
                <span class="cs-line cs-line3" aria-hidden="true"></span>
            </div>
        </button>
        <!-- We need a wrapper div so we can set a fixed height on the cs-ul in case the nav list gets too long from too many dropdowns being opened and needs to have an overflow scroll. This wrapper acts as the background so it can go the full height of the screen and not cut off any overflowing nav items while the cs-ul stops short of the bottom of the screen, which keeps all nav items in view no matter how mnay there are-->
        <div class="cs-ul-wrapper">
            <ul id="cs-expanded" class="cs-ul">
                <li class="cs-li">
                    <a href="/" class="cs-li-link cs-active" aria-current="page">
                        Home
                    </a>
                </li>
                <li class="cs-li">
                    <a href="#classes" class="cs-li-link">
                        Classes
                    </a>
                </li>
                <li class="cs-li">
                    <a href="#sbsr-2273" class="cs-li-link">
                        Events
                    </a>
                </li>
                <li class="cs-li">
                    <a href="#about" class="cs-li-link">
                        About
                    </a>
                </li>
                <li class="cs-li">
                    <a href="#alakai" class="cs-li-link">
                        Alaka'i
                    </a>
                </li>
                <li class="cs-li">
                    <a href="#contact" class="cs-li-link">
                        Contact
                    </a>
                </li>
                <li class="cs-li">
                    <a href="/members-page" class="cs-li-link" id="members-area-link">
                        Members Area
                    </a>
                </li>
                <li class="cs-li cs-social">
                <a href="https://www.facebook.com/groups/329283045609515" class="cs-li-link" target="_blank">
                    <i class="bi bi-facebook"></i>
                </a>
            </li>
             <li class="cs-li cs-login">
    <a href="#" class="cs-li-link" id="auth-link" data-logged-in={isLoggedIn.toString()}>
    {isLoggedIn ? 'Sign Out' : 'Member Login'}
</a>
</li>
            </ul>
        </div>
    </nav>
</header>
</div>
<div style="display: none;">
  Login component rendered: {!isLoggedIn ? "Yes" : "No"}
</div>

{!isLoggedIn && <Login />}
                                

<style lang="less">
/* Keep all your existing styles - they don't need to change */

    body.no-scroll {
    overflow: hidden;
  }
  
/*-- -------------------------- -->
<---     Header Wrapper         -->
<--- -------------------------- -*/
/* Add this to your styles */
#header-wrapper {
  position: relative;
  width: 100%;
  /* Add a higher z-index to ensure it's above other elements */
  z-index: 10;
  /* Extend the background color to cover any gaps */
  background-color: #fff;
  /* Add padding at the bottom to account for the navigation's negative positioning */
  padding-bottom: 4.5rem; /* Match the largest negative bottom value */
  margin-bottom: 1.5rem;
}

#signin-lightbox {
  z-index: 9999;
  position: fixed;
}


/*-- -------------------------- -->
<---     Mobile Navigation      -->
<--- -------------------------- -*/

/* Mobile - 1023.5px */
@media only screen and (max-width: 63.96875rem) {
    body {
        &.cs-open {
            overflow: hidden;
        }
    }

    #cs-navigation {
        font-family: "Afacad", Arial, sans-serif;
        width: 100%;
        /* prevents padding and border from affecting height and width */
        box-sizing: border-box;
        padding: (12/16rem) (16/16rem);
        background-color: var(--primary);
        box-shadow: rgba(149, 157, 165, 0.2) 0px 8px 24px;
        position: absolute;
        bottom: -2rem;
        left: 0;
        z-index: 100;
        
        /* Sticky navigation styles */
        &.sticky {
            position: fixed;
            top: 0;
            bottom: auto;
        }

     /*    &:after {
             
            content: "";
            width: 40%;
            max-width: (146/16rem);
            height: 100%;
            background: var(--primary);
            opacity: 1;
            display: block;
            position: absolute;
            top: 0;
            left: 0%;
            z-index: -1;
            transition: width 0.2s, max-width 0.3s, background-color 0.3s; 
        } */

        &:before {
            /* grey blurrd overlay */
            content: "";
            width: 100%;
            height: 0vh;
            background: rgba(0, 0, 0, 0.6);
            opacity: 0;
            display: block;
            position: absolute;
            top: 100%;
            right: 0;
            z-index: -11;
            transition: height 0.5s, opacity 0.3s;
            -webkit-backdrop-filter: blur(10px);
            backdrop-filter: blur(10px);
        }

        &.cs-active {
            &:after {
                width: 100%;
                max-width: 100%;
                background-color: #484848;
            }

            &:before {
                height: 100vh;
                opacity: 1;
            }

            .cs-ul-wrapper {
                opacity: 1;
                transform: scaleY(1);
                transition-delay: 0.2s;
            }

            .cs-li {
                opacity: 1;
                transform: translateY(0);
            }
            
            /* Move the active toggle styles here */
            .cs-toggle {
                .cs-line1 {
                    top: 50%;
                    transform: translate(-50%, -50%) rotate(225deg);
                }

                .cs-line2 {
                    top: 50%;
                    transform: translate(-50%, -50%) translateY(0) rotate(-225deg);
                    transform-origin: center;
                }

                .cs-line3 {
                    opacity: 0;
                    bottom: 100%;
                }
            }
        }

        .cs-toggle {
            /* 44px - 48px */
            width: clamp(2.75rem, 6vw, 3rem);
            height: clamp(2.75rem, 6vw, 3rem);
            margin: 0 0 0 auto;
            background-color: #484848;
            border: none;
            border-radius: (4/16rem);
            display: flex;
            justify-content: center;
            align-items: center;
            
            /* Default state for the toggle (hamburger) */
            .cs-line1 {
                top: 0;
                transform: translate(-50%, 0);
                transition: transform 0.5s, top 0.3s, left 0.3s;
                animation-duration: 0.7s;
                animation-timing-function: ease;
                animation-direction: normal;
                animation-fill-mode: forwards;
                transform-origin: center;
            }

            .cs-line2 {
                top: 50%;
                transform: translateX(-50%) translateY(-50%);
                transition: top 0.3s, left 0.3s, transform 0.5s;
                animation-duration: 0.7s;
                animation-timing-function: ease;
                animation-direction: normal;
                animation-fill-mode: forwards;
            }

            .cs-line3 {
                bottom: 0;
                opacity: 1;
                transition: bottom 0.3s, opacity 0.3s;
            }
        }

        .cs-box {
            /* 24px - 28px */
            width: clamp(1.5rem, 2vw, 1.75rem);
            /* 14px - 16px */
            height: clamp(0.875rem, 1.5vw, 1rem);
            position: relative;
        }

        .cs-line {
            width: 100%;
            height: 2px;
            background-color: #fff;
            border-radius: 2px;
            position: absolute;
            left: 50%;
            transform: translateX(-50%);
        }

        .cs-ul-wrapper {
            width: 100%;
            background-color: #fff;
            overflow: hidden;
            box-shadow: inset rgba(0, 0, 0, 0.2) 0px 8px 24px;
            opacity: 0;
            position: absolute;
            top: 100%;
            left: 0;
            z-index: -1;
            transform: scaleY(0);
            transition: transform 0.4s, opacity 0.3s;
            transform-origin: top;
        }

        .cs-ul {
            width: 100%;
            height: auto;
            max-height: 65vh;
            margin: 0;
            padding: (48/16rem) 0 (48/16rem) 0;
            overflow: scroll;
            display: flex;
            flex-direction: column;
            justify-content: flex-start;
            align-items: center;
            gap: (20/16rem);
        }

        .cs-li {
            text-align: center;
            text-transform: uppercase;
            list-style: none;
            margin-right: 0;
            opacity: 0;
            /* transition from these values */
            transform: translateY(-4.375rem);
            transition: transform 0.6s, opacity 0.9s;

            &:nth-of-type(1) {
                transition-delay: 0.05s;
            }
            &:nth-of-type(2) {
                transition-delay: 0.1s;
            }
            &:nth-of-type(3) {
                transition-delay: 0.15s;
            }
            &:nth-of-type(4) {
                transition-delay: 0.2s;
            }
            &:nth-of-type(5) {
                transition-delay: 0.25s;
            }
            &:nth-of-type(6) {
                transition-delay: 0.3s;
            }
            &:nth-of-type(7) {
                transition-delay: 0.35s;
            }
            &:nth-of-type(8) {
                transition-delay: 0.4s;
            }
            &:nth-of-type(9) {
                transition-delay: 0.45s;
            }
            &:nth-of-type(10) {
                transition-delay: 0.5s;
            }
            &:nth-of-type(11) {
                transition-delay: 0.55s;
            }
            &:nth-of-type(12) {
                transition-delay: 0.6s;
            }
            &:nth-of-type(13) {
                transition-delay: 0.65s;
            }
        }

        .cs-li-link {
            /* 16px - 24px */
            font-size: clamp(1.2rem, 2.5vw, 1.5rem);
            line-height: 1.2em;
            text-decoration: none;
            margin: 0;
            color: var(--primary);
            display: inline-block;
            position: relative;

            &:before {
                /* active state underline */
                content: "";
                width: 100%;
                height: 1px;
                background: currentColor;
                opacity: 1;
                display: none;
                position: absolute;
                bottom: (-2/16rem);
                left: 0;
            }

            &.cs-active {
                &:before {
                    display: block;
                }
            }
        }
    }
}

/*-- -------------------------- -->
<---     Desktop Navigation     -->
<--- -------------------------- -*/

/* Small Desktop - 1024px */
@media only screen and (min-width: 64rem) {
    #cs-navigation {
        font-family: "Afacad", Arial, sans-serif;
        width: 100%;
        /* prevents padding and border from affecting height and width */
        box-sizing: border-box;
        /* 23px - 420px */
        padding: (0/16rem) (16/16rem) (0/16rem) clamp(14.6875rem, 23vw, 26.25rem);
        background-color: #fff;
        box-shadow: rgba(40, 41, 41, 0.582) 0px 8px 24px;
        display: flex;
        justify-content: space-between;
        align-items: center;
        position: absolute;
        bottom: -5rem;
        left: 0;
        z-index: 10000;
        
        /* Sticky navigation styles */
        &.sticky {
            position: fixed;
            top: 0;
            bottom: auto;
        }

        .cs-toggle {
            display: none;
        }

        .cs-ul {
            margin: 0;
            padding: 0;
            display: flex;
            justify-content: flex-start;
            align-items: center;
            /* 20px - 36px */
            gap: clamp(1.25rem, 2.6vw, 2.25rem);
        }

        .cs-li {
            font-size: 3rem;
            text-transform: uppercase;
            list-style: none;
            padding: (32/16rem) 0;
            /* prevent flexbox from squishing it */
            flex: none;
            &:last-of-type {
                /* pushes the button to the far roght */
                margin-left: auto;
            }
        }

        .cs-li-link {
            /* 14px - 16px */
            font-size: clamp(1rem, 2vw, 1.3rem);
            line-height: 1.5em;
            text-decoration: none;
            margin: 0;
            color: var(--primary);
            display: block;
            position: relative;
            &:hover {
                &:before {
                    width: 100%;
                }
            }

            &.cs-active {
                &:before {
                    width: 100%;
                }
            }

            &:before {
                /* active state underline */
                content: "";
                width: 0%;
                height: 2px;
                background: var(--primary);
                opacity: 1;
                display: block;
                position: absolute;
                bottom: (0/16rem);
                left: 0;
                transition: width 0.3s;
            }
        }

          .cs-social {
            margin-left: 4rem; /* This pushes the social icon to the right */
        }
        
        .cs-login {
            margin-left: 1rem; /* This adds some space between the social icon and login */
        }

        .cs-nav-button {
            margin: 0 0 0 auto;
        }
    }
}
                                

/*-- -------------------------- -->
<---           Quote            -->
<--- -------------------------- -*/

/* Mobile - 360px */
@media only screen and (min-width: 0rem) {
    #quote-2141 {
        padding: 0;
        background-color: #fff;
        position: relative;
        z-index: 1;
        min-height: 130px;
        max-height: 480px;
        height: auto;
        overflow: hidden; /* Add this to prevent image from overflowing */
        
        .cs-container {
            width: 100%;
            max-width: (1280/16rem);
            margin: 0 auto;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            position: relative;
            height: 100%;
            gap: 0;
        }
        
        .cs-content {
            width: 100%;
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: center;
            align-items: center;
            position: relative;
            padding: 20px 0; /* Add padding inside the content area */
            box-sizing: border-box;
        }
        
        .cs-quote-icon {
            max-width: 100%; /* Limit width to prevent stretching */
            max-height: 32.5rem; /* Slightly less than container max-height to account for padding */
            width: auto; /* Let width be determined by height constraint */
            height: auto; /* Let height be determined by width constraint */
            display: block;
            position: relative;
            top: -1.3rem;
            z-index: -1;
            object-fit: contain; /* Keep aspect ratio */
            margin: 0 auto; /* Center horizontally */
            padding: 1rem;
            padding-bottom: -1rem;
        }
    }
}

/* Mobile - 1023.5px */
@media only screen and (max-width: 63.96875rem) {
    .cs-quote-icon-desktop {
        display: none !important;
    }
    .cs-quote-icon-mobile {
        display: block !important;
        top: 0.3rem !important;
    }
    
    /* Reduce padding below the image */
    #quote-2141 .cs-quote-icon {
        padding-bottom: 0.5rem;
        margin-bottom: 0;
    }
    
    /* Adjust the header wrapper padding */
    #header-wrapper {
        padding-bottom: 4rem; /* Balanced value */
    }
    
    /* Move the navigation up but maintain overlay functionality */
    #cs-navigation {
        bottom: -1.5rem;
    }
}

/* Desktop - 1024px and above */
@media only screen and (min-width: 64rem) {
    #header-wrapper {
        padding-bottom: 6rem; /* Increase padding to accommodate the full image */
        overflow: visible; /* Ensure content isn't clipped */
    }
    
    .cs-quote-icon-desktop {
        display: block !important;
        max-height: 32.5rem;
        margin-bottom: 2rem;
        z-index: 5; /* Keep image above the background */
    }
    .cs-quote-icon-mobile {
        display: none !important;
    }

     #quote-2141 {
        position: relative;
        z-index: 5; /* Increase from 1 to ensure proper stacking context */
        overflow: visible;
        padding-bottom: 6rem;
    }
}
</style>

